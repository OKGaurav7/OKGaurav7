import pandas as pd
from openpyxl import load_workbook
from openpyxl.styles import PatternFill
from openpyxl.utils import get_column_letter
from datetime import datetime

# Read the master CSV file
master_df = pd.read_csv('master.csv')

selected_columns = ['Counterparty Name', 'Operation Type', 'Trade Date', 'Trade Price', 'Value Date', 'Primary Original Quantity', 'Settlement Instrument Name', 'ISIN Primary Instrument Reference', 'Primary Instrument Long Name', 'SMO Trade Reference', 'Internal Status Narrative', 'Sales Person Name']
output_df = master_df[selected_columns]

# Define new columns
new_columns = ['CBBT_PX_ASK', 'Economic Impact', 'LQA (Liq Score)', 'Days Elapsed']

# Insert new columns after "Trade Price"
output_df = output_df.reindex(columns=output_df.columns.tolist()[:4] + new_columns + output_df.columns.tolist()[4:])

# Add dummy data to new columns
import random
output_df['CBBT_PX_ASK'] = [random.randint(1, 100) for _ in range(len(output_df))]
output_df['Economic Impact'] = [random.uniform(1000, 10000) for _ in range(len(output_df))]
output_df['LQA (Liq Score)'] = [random.uniform(1000, 10000) for _ in range(len(output_df))]

output_df['Trade Date'] = pd.to_datetime(output_df['Trade Date']).dt.strftime('%Y-%m-%d')
output_df['Value Date'] = pd.to_datetime(output_df['Value Date']).dt.strftime('%Y-%m-%d')

output_df['Value Date'] = pd.to_datetime(output_df['Value Date'])

today = datetime.today()
output_df['Days Elapsed'] = (today - output_df['Value Date']).dt.days - 1

output_filename = 'output.xlsx'
output_df.to_excel(output_filename, index=False, sheet_name='Sheet1')

# Open the Excel file
wb = load_workbook(output_filename)
ws = wb.active

# Set header cells background color to red
for cell in ws[1]:
    cell.fill = PatternFill(start_color="FF0000", end_color="FF0000", fill_type="solid")

# Auto adjust column widths
for column in ws.columns:
    max_length = 0
    column = [str(cell.value) for cell in column]
    for cell in column:
        try:
            if len(cell) > max_length:
                max_length = len(cell)
        except:
            pass
    adjusted_width = (max_length + 2) * 1.2
    ws.column_dimensions[get_column_letter(column[0].column)].width = adjusted_width

# Save the modified Excel file
wb.save(output_filename)

output_df.to_csv('output.csv', index=False)

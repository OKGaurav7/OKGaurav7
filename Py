AssertionError                            Traceback (most recent call last)
File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/pandas/core/internals/construction.py:969, in _finalize_columns_and_data(content, columns, dtype)
    968 try:
--> 969     columns = _validate_or_indexify_columns(contents, columns)
    970 except AssertionError as err:
    971     # GH#26429 do not raise user-facing AssertionError

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/pandas/core/internals/construction.py:1017, in _validate_or_indexify_columns(content, columns)
   1015 if not is_mi_list and len(columns) != len(content):  # pragma: no cover
   1016     # caller's responsibility to check for this...
-> 1017     raise AssertionError(
   1018         f"{len(columns)} columns passed, passed data had "
   1019         f"{len(content)} columns"
   1020     )
   1021 elif is_mi_list:
   1022 
   1023     # check if nested list column, length of each sub-list should be equal

AssertionError: 18 columns passed, passed data had 7 columns

The above exception was the direct cause of the following exception:

ValueError                                Traceback (most recent call last)
Cell In[5], line 485
    481                         cell.fill = PatternFill(start_color="FFC7CE", end_color="FFC7CE", fill_type="solid")
    483     wb.save(output_filename)
--> 485 generate_output()
    486 generate_new_excel()

Cell In[5], line 130, in generate_output()
    128 l1 = ["PX_DISC_MID", "", "USD", "EUR", "AUD", "JPY", "GBP"]
    129 l2 = ["", "", 1, '=BDP("EURUSD BGN Curncy","PX_CLOSE_1D")', '=BDP("AUDUSD BGN Curncy","PX_CLOSE_1D")', '=BDP("JPYUSD BGN Curncy","PX_CLOSE_1D")', '=BDP("GBPUSD BGN Curncy","PX_CLOSE_1D")']
--> 130 new_data_df = pd.DataFrame([l1, l2], columns=output_df.columns)
    131 output_df = pd.concat([output_df, new_data_df], axis=1)
    133 # Filter data where operation type is Buy

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/pandas/core/frame.py:746, in DataFrame.__init__(self, data, index, columns, dtype, copy)
    744     if columns is not None:
    745         columns = ensure_index(columns)
--> 746     arrays, columns, index = nested_data_to_arrays(
    747         # error: Argument 3 to "nested_data_to_arrays" has incompatible
    748         # type "Optional[Collection[Any]]"; expected "Optional[Index]"
    749         data,
    750         columns,
    751         index,  # type: ignore[arg-type]
    752         dtype,
    753     )
    754     mgr = arrays_to_mgr(
    755         arrays,
    756         columns,
   (...)
    759         typ=manager,
    760     )
    761 else:

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/pandas/core/internals/construction.py:510, in nested_data_to_arrays(data, columns, index, dtype)
    507 if is_named_tuple(data[0]) and columns is None:
    508     columns = ensure_index(data[0]._fields)
--> 510 arrays, columns = to_arrays(data, columns, dtype=dtype)
    511 columns = ensure_index(columns)
    513 if index is None:

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/pandas/core/internals/construction.py:875, in to_arrays(data, columns, dtype)
    872     data = [tuple(x) for x in data]
    873     arr = _list_to_arrays(data)
--> 875 content, columns = _finalize_columns_and_data(arr, columns, dtype)
    876 return content, columns

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/pandas/core/internals/construction.py:972, in _finalize_columns_and_data(content, columns, dtype)
    969     columns = _validate_or_indexify_columns(contents, columns)
    970 except AssertionError as err:
    971     # GH#26429 do not raise user-facing AssertionError
--> 972     raise ValueError(err) from err
    974 if len(contents) and contents[0].dtype == np.object_:
    975     contents = _convert_object_array(contents, dtype=dtype)

ValueError: 18 columns passed, passed data had 7 columns

TypeError                                 Traceback (most recent call last)
File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/descriptors/base.py:55, in _convert(expected_type, value)
     54 try:
---> 55     value = expected_type(value)
     56 except:

TypeError: Fill() takes no arguments

During handling of the above exception, another exception occurred:

TypeError                                 Traceback (most recent call last)
Cell In[57], line 79
     76         cell.border = border
     78 # Save the modified Excel file
---> 79 wb.save(output_filename)
     81 output_df.to_csv('output.csv', index=False)

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/workbook/workbook.py:407, in Workbook.save(self, filename)
    405 if self.write_only and not self.worksheets:
    406     self.create_sheet()
--> 407 save_workbook(self, filename)

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/writer/excel.py:293, in save_workbook(workbook, filename)
    291 archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)
    292 writer = ExcelWriter(workbook, archive)
--> 293 writer.save()
    294 return True

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/writer/excel.py:275, in ExcelWriter.save(self)
    273 def save(self):
    274     """Write data into the archive."""
--> 275     self.write_data()
    276     self._archive.close()

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/writer/excel.py:84, in ExcelWriter.write_data(self)
     80 #self._archive.writestr(ARC_SHARED_STRINGS,
     81                       #write_string_table(self.workbook.shared_strings))
     82 self._write_external_links()
---> 84 stylesheet = write_stylesheet(self.workbook)
     85 archive.writestr(ARC_STYLE, tostring(stylesheet))
     87 writer = WorkbookWriter(self.workbook)

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/styles/stylesheet.py:235, in write_stylesheet(wb)
    233 stylesheet = Stylesheet()
    234 stylesheet.fonts = wb._fonts
--> 235 stylesheet.fills = wb._fills
    236 stylesheet.borders = wb._borders
    237 stylesheet.dxfs = wb._differential_styles.styles

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/descriptors/sequence.py:26, in Sequence.__set__(self, instance, seq)
     24 if not isinstance(seq, self.seq_types):
     25     raise TypeError("Value must be a sequence")
---> 26 seq = [_convert(self.expected_type, value) for value in seq]
     27 if self.unique:
     28     seq = IndexedList(seq)

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/descriptors/sequence.py:26, in <listcomp>(.0)
     24 if not isinstance(seq, self.seq_types):
     25     raise TypeError("Value must be a sequence")
---> 26 seq = [_convert(self.expected_type, value) for value in seq]
     27 if self.unique:
     28     seq = IndexedList(seq)

File /opt/ailabs/aire/envs/aire-jupyter/lib/python3.9/site-packages/openpyxl/descriptors/base.py:57, in _convert(expected_type, value)
     55         value = expected_type(value)
     56     except:
---> 57         raise TypeError('expected ' + str(expected_type))
     58 return value

TypeError: expected <class 'openpyxl.styles.fills.Fill'>

import pandas as pd
from openpyxl import load_workbook
from openpyxl.styles import PatternFill, Border, Side
from datetime import datetime

# Read the master CSV file
master_df = pd.read_excel('master.xlsx')

selected_columns = ['Counterparty Name', 'Operation Type', 'Trade Date', 'Trade Price', 'Value Date', 'Primary Original Quantity', 'Settlement Instrument Name', 'ISIN Primary Instrument Reference', 'Primary Instrument Long Name', 'SMO Trade Reference', 'Internal Status Narrative', 'Sales Person Name']
output_df = master_df[selected_columns]

# Define new columns
new_columns = ['CBBT_PX_ASK', 'Economic Impact', 'LQA (Liq Score)', 'Days Elapsed']

# Insert new columns after "Trade Price"
output_df = output_df.reindex(columns=output_df.columns.tolist()[:4] + new_columns + output_df.columns.tolist()[4:])

# Add dummy data to new columns
import random
output_df['CBBT_PX_ASK'] = [random.randint(1, 100) for _ in range(len(output_df))]
output_df['Economic Impact'] = [random.uniform(-10000, 10000) for _ in range(len(output_df))] # Generating some negative values for testing
output_df['LQA (Liq Score)'] = [random.uniform(1000, 10000) for _ in range(len(output_df))]

output_df['Trade Date'] = pd.to_datetime(output_df['Trade Date']).dt.strftime('%Y-%m-%d')
output_df['Value Date'] = pd.to_datetime(output_df['Value Date']).dt.strftime('%Y-%m-%d')

output_df['Value Date'] = pd.to_datetime(output_df['Value Date'])

today = datetime.today()
output_df['Days Elapsed'] = (today - output_df['Value Date']).dt.days - 1

output_filename = 'output.xlsx'
output_df.to_excel(output_filename, index=False, sheet_name='Sheet1')

# Open the Excel file
wb = load_workbook(output_filename)
ws = wb.active

# Set header cells background color to RGB value (192, 0, 0)
header_fill = PatternFill(start_color="C00000", end_color="C00000", fill_type="solid")
for cell in ws[1]:
    cell.fill = header_fill

# Set conditional formatting color to RGB value (255, 199, 206)
condition_fill = PatternFill(start_color="FFC7CE", end_color="FFC7CE", fill_type="solid")

# Economic Impact column
for i, value in enumerate(output_df['Economic Impact'], start=2):
    if value < 0:
        ws.cell(row=i, column=output_df.columns.get_loc('Economic Impact') + 1).fill = condition_fill

# Days Elapsed column
for i, value in enumerate(output_df['Days Elapsed'], start=2):
    if value >= 7:
        ws.cell(row=i, column=output_df.columns.get_loc('Days Elapsed') + 1).fill = condition_fill

# Add cell borders to all cells
border = Border(left=Side(border_style='thin', color='000000'),
                right=Side(border_style='thin', color='000000'),
                top=Side(border_style='thin', color='000000'),
                bottom=Side(border_style='thin', color='000000'))

for row in ws.iter_rows():
    for cell in row:
        cell.border = border

# Save the modified Excel file
wb.save(output_filename)

output_df.to_csv('output.csv', index=False)

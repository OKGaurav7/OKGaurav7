import pandas as pd
import openpyxl
from openpyxl import load_workbook
from openpyxl.styles import PatternFill, Font, Border, Side, Alignment
from openpyxl.utils import get_column_letter
from datetime import datetime
import win32com.client as win32

def apply_styling(ws, header_fill_color="C00000", header_font_color="FFFFFF", condition_fill_color="FFC7CE", border_color="000000"):
    # Function to apply styling to the worksheet
    # Your existing styling code goes here

def generate_output(master_path, takara_path, prodman_path):
    # Function to generate the output Excel file

    # Read data from master.xlsx, Takara.xlsx, and prodman.xlsx
    master = pd.read_excel(master_path)
    Takara = pd.read_excel(takara_path)
    prodman = pd.read_excel(prodman_path)

    # Your existing code for merging and processing the data goes here

    output_filename = 'output.xlsx'

    # Write data to Excel file
    with pd.ExcelWriter(output_filename) as writer:
        output_df.to_excel(writer, index=False, sheet_name='All Data')

        # Filter data where operation type is Buy
        buy_df = output_df[output_df['Operation Type'].str.contains('BUY')]
        buy_df.to_excel(writer, index=False, sheet_name='Buy Data')

        # Filter data where operation type is Sell
        sell_df = output_df[output_df['Operation Type'].str.contains('SELL')]
        sell_df.to_excel(writer, index=False, sheet_name='Sell Data')

    # Your existing code for opening Excel, adding columns, applying formulas, and styling goes here

    # Execute macro ll after the original code ends
    xl = win32.gencache.EnsureDispatch('Excel.Application')
    wb = xl.Workbooks.Open(Filename=output_filename)
    xl.Application.Run("PERSONAL.XLSB!ll")
    wb.Save()
    xl.Quit()

def generate_new_excel():
    # Function to generate the new Excel sheet

    # Your existing code for generating new data and adding it to the Excel file goes here

# Example usage:
master_path = '/path/to/master.xlsx'
takara_path = '/path/to/Takara.xlsx'
prodman_path = '/path/to/prodman.xlsx'

generate_output(master_path, takara_path, prodman_path)
generate_new_excel()
